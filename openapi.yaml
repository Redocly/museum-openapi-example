openapi: 3.1.0
info:
  title: Redocly Museum API v2
  description: API for managing museum operations and events, powered by Redocly.
  version: 2.0.0
  termsOfService: 'https://redocly.com/terms/'
  contact:
    email: api-support@redocly.com
    url: 'https://redocly.com/support/'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'https://api.redocly-museum-v2.com/v2'
    description: Production server for Redocly Museum API v2
    variables:
      environment:
        enum:
          - production
          - staging
          - development
        default: production
paths:
  /museum-hours:
    get:
      summary: Retrieve Museum Hours
      description: Get current and upcoming operating hours for the museum.
      operationId: getMuseumHours
      tags:
        - Hours
      parameters:
        - $ref: '#/components/parameters/StartDate'
        - $ref: '#/components/parameters/EndDate'
        - $ref: '#/components/parameters/PaginationPage'
        - $ref: '#/components/parameters/PaginationLimit'
      responses:
        '200':
          description: Successful response with museum hours data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuseumHoursResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
  /events:
    post:
      summary: Create Special Event
      description: Add a new special event to the museum's calendar.
      operationId: createSpecialEvent
      tags:
        - Events
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSpecialEventRequest'
      responses:
        '201':
          description: Event successfully created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /events/{eventId}:
    get:
      summary: Get Event Details
      description: Retrieve details of a specific event by ID.
      operationId: getEventDetails
      tags:
        - Events
      parameters:
        - $ref: '#/components/parameters/EventId'
      responses:
        '200':
          description: Successful response with event details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      summary: Update Event
      description: Modify details of an existing event.
      operationId: updateEvent
      tags:
        - Events
      parameters:
        - $ref: '#/components/parameters/EventId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSpecialEventRequest'
      responses:
        '200':
          description: Event successfully updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecialEvent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  schemas:
    MuseumHoursResponse:
      type: array
      items:
        $ref: '#/components/schemas/MuseumDailyHours'
    MuseumDailyHours:
      type: object
      properties:
        date:
          type: string
          format: date
        openingTime:
          type: string
          format: time
        closingTime:
          type: string
          format: time
    SpecialEvent:
      type: object
      properties:
        eventId:
          type: string
          format: uuid
        eventName:
          type: string
        eventDescription:
          type: string
        eventLocation:
          type: string
        eventDates:
          type: array
          items:
            type: string
            format: date
        eventPrice:
          type: number
          format: float
    CreateSpecialEventRequest:
      type: object
      properties:
        eventName:
          type: string
        eventDescription:
          type: string
        eventLocation:
          type: string
        eventDates:
          type: array
          items:
            type: string
            format: date
        eventPrice:
          type: number
          format: float
      required:
        - eventName
        - eventDescription
        - eventLocation
        - eventDates
        - eventPrice
    UpdateSpecialEventRequest:
      type: object
      properties:
        eventName:
          type: string
        eventDescription:
          type: string
        eventLocation:
          type: string
        eventDates:
          type: array
          items:
            type: string
            format: date
        eventPrice:
          type: number
          format: float
  parameters:
    StartDate:
      name: startDate
      in: query
      description: Start date for filtering events or hours.
      required: false
      schema:
        type: string
        format: date
    EndDate:
      name: endDate
      in: query
      description: End date for filtering events or hours.
      required: false
      schema:
        type: string
        format: date
    PaginationPage:
      name: page
      in: query
      description: Page number for pagination.
      required: false
      schema:
        type: integer
        default: 1
        minimum: 1
    PaginationLimit:
      name: limit
      in: query
      description: Number of items per page.
      required: false
      schema:
        type: integer
        default: 10
        minimum: 1
        maximum: 100
  responses:
    BadRequest:
      description: Invalid request data provided.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized access.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
tags:
  - name: Hours
    description: Museum operating hours information.
  - name: Events
    description: Special events hosted at the museum.
